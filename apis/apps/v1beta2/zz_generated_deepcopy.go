package v1beta2

import (
	controller "github.com/rancher/norman/controller"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Client) DeepCopyInto(out *Client) {
	*out = *in
	out.Mutex = in.Mutex
	if in.restClient == nil {
		out.restClient = nil
	} else {
		out.restClient = in.restClient.DeepCopyInterface()
	}
	if in.starters != nil {
		in, out := &in.starters, &out.starters
		*out = make([]controller.Starter, len(*in))
		for i := range *in {
			if (*in)[i] == nil {
				(*out)[i] = nil
			} else {
				(*out)[i] = (*in)[i].DeepCopyStarter()
			}
		}
	}
	if in.deploymentControllers != nil {
		in, out := &in.deploymentControllers, &out.deploymentControllers
		*out = make(map[string]DeploymentController, len(*in))
		for key, val := range *in {
			if val == nil {
				(*out)[key] = nil
			} else {
				(*out)[key] = val.DeepCopyDeploymentController()
			}
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Client.
func (in *Client) DeepCopy() *Client {
	if in == nil {
		return nil
	}
	out := new(Client)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DeploymentList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	} else {
		return nil
	}
}
